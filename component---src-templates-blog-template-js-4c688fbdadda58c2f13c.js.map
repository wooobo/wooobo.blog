{"version":3,"file":"component---src-templates-blog-template-js-4c688fbdadda58c2f13c.js","mappings":"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","sources":["webpack://zoomkoding.com/./src/components/post-header/index.js","webpack://zoomkoding.com/./src/components/post-navigator/index.js","webpack://zoomkoding.com/./src/components/post-content/index.js","webpack://zoomkoding.com/./src/components/utterances/index.js","webpack://zoomkoding.com/./src/templates/blog-template.js"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nfunction PostHeader({ post, viewCount }) {\n  return (\n    <header className=\"post-header\">\n      {post.emoji && <div className=\"emoji\">{post.emoji}</div>}\n      <div className=\"info\">\n        <div className=\"categories\">\n          {post.categories.map((category) => (\n            <Link className=\"category\" key={category} to={`/posts/${category}`}>\n              {category}\n            </Link>\n          ))}\n        </div>\n      </div>\n\n      <h1 className=\"title\">{post.title}</h1>\n      <div className=\"info\">\n        <div className=\"author\">\n          posted by <strong>{post.author}</strong>,\n        </div>{' '}\n        {post.date}\n        {viewCount && ` · ${viewCount} views`}\n      </div>\n    </header>\n  );\n}\nexport default PostHeader;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nfunction PostNavigator({ prevPost, nextPost }) {\n  return (\n    <div className=\"post-navigator\">\n      <div className=\"post-navigator-card-wrapper\">\n        {nextPost && (\n          <Link className=\"post-card prev\" key={nextPost.id} to={nextPost.slug}>\n            <div className=\"direction\">이전 글</div>\n            <div className=\"title\">{nextPost.title}</div>\n          </Link>\n        )}\n      </div>\n      <div className=\"post-navigator-card-wrapper\">\n        {prevPost && (\n          <Link className=\"post-card next\" key={prevPost.id} to={prevPost.slug}>\n            <div className=\"direction\">다음 글</div>\n            <div className=\"title\">{prevPost.title}</div>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PostNavigator;\n","import React from 'react';\nimport './style.scss';\n\nfunction PostContent({ html }) {\n  return (\n    <div className=\"post-content\">\n      <div className=\"markdown\" dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  );\n}\n\nexport default PostContent;\n","import React, { createRef, useEffect, useRef } from 'react';\n\nconst src = 'https://utteranc.es/client.js';\nconst branch = 'master';\n\nfunction Utterances({ repo, path }) {\n  const rootElm = createRef();\n  const isUtterancesLoaded = useRef(false);\n\n  useEffect(() => {\n    if (!rootElm.current || isUtterancesLoaded.current) return;\n    const storedIsDarkMode = localStorage.getItem('isDarkMode');\n\n    const utterances = document.createElement('script');\n    const utterancesConfig = {\n      src,\n      repo,\n      branch,\n      theme: JSON.parse(storedIsDarkMode) ? 'photon-dark' : 'github-light',\n      label: 'comment',\n      async: true,\n      'issue-term': 'pathname',\n      crossorigin: 'anonymous',\n    };\n\n    Object.keys(utterancesConfig).forEach((configKey) => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey]);\n    });\n    rootElm.current.appendChild(utterances);\n    isUtterancesLoaded.current = true;\n  }, [repo, rootElm, path]);\n\n  return <div className=\"utterances\" ref={rootElm} />;\n}\n\nexport default Utterances;\n","import React, { useEffect, useState } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport PostHeader from '../components/post-header';\nimport PostNavigator from '../components/post-navigator';\nimport Post from '../models/post';\nimport PostContent from '../components/post-content';\nimport Utterances from '../components/utterances';\n\nfunction BlogTemplate({ data }) {\n  const [viewCount, setViewCount] = useState(null);\n\n  const curPost = new Post(data.cur);\n  const prevPost = data.prev && new Post(data.prev);\n  const nextPost = data.next && new Post(data.next);\n  const { siteUrl, comments } = data.site?.siteMetadata;\n  const utterancesRepo = comments?.utterances?.repo;\n\n  return (\n    <Layout>\n      <Seo title={curPost?.title} description={curPost?.excerpt} />\n      <PostHeader post={curPost} viewCount={viewCount} />\n      <PostContent html={curPost.html} />\n      <PostNavigator prevPost={prevPost} nextPost={nextPost} />\n      {utterancesRepo && <Utterances repo={utterancesRepo} path={curPost.slug} />}\n    </Layout>\n  );\n}\n\nexport default BlogTemplate;\n\nexport const pageQuery = graphql`\n  query($slug: String, $nextSlug: String, $prevSlug: String) {\n    cur: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt(pruneLength: 500, truncate: true)\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n        comments {\n          utterances {\n            repo\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","post","viewCount","React","className","emoji","categories","map","category","Link","key","to","title","author","date","prevPost","nextPost","id","slug","html","dangerouslySetInnerHTML","__html","repo","path","rootElm","createRef","isUtterancesLoaded","useRef","useEffect","current","storedIsDarkMode","localStorage","getItem","utterances","document","createElement","utterancesConfig","src","branch","theme","JSON","parse","label","async","crossorigin","Object","keys","forEach","configKey","setAttribute","appendChild","ref","_data$site","_comments$utterances","data","_useState","useState","curPost","Post","cur","prev","next","_data$site$siteMetada","site","siteMetadata","comments","siteUrl","utterancesRepo","Layout","Seo","description","excerpt","PostHeader","PostContent","PostNavigator","Utterances"],"sourceRoot":""}