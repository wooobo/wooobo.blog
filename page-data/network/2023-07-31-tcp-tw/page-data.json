{"componentChunkName":"component---src-templates-blog-template-js","path":"/network/2023-07-31-tcp-tw/","result":{"data":{"cur":{"id":"9697e69a-1f6d-56b7-940b-adea11c02f81","html":"<h1 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요?</h1>\n<p>최근에 프로젝트를 진행하면서, 리눅스 커널단의 설정에 의해 이슈가 발생하였다.<br>\n그래서 이번 기회에 TCP_TW 설정에 대해 알아보고자 한다.</p>\n<p>이전에 이슈가 된 설정은 <code class=\"language-text\">tcp_tw_reuse</code>, <code class=\"language-text\">tcp_tw_recycle</code> 옵션이었는데, 이 옵션들은 <code class=\"language-text\">TIME_WAIT</code> 상태의 소켓을 재사용하는 옵션이다.</p>\n<h1 id=\"time_wait\" style=\"position:relative;\"><a href=\"#time_wait\" aria-label=\"time_wait permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TIME_WAIT?</h1>\n<p>TIME_WAIT 상태는 TCP 연결이 종료된 후, 일정 시간 동안 유지되는 상태이다.</p>\n<h1 id=\"이슈\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%8A%88\" aria-label=\"이슈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이슈</h1>\n<p>최근 azure 의 <code class=\"language-text\">AKS</code>를 세팅하면서 외부 요청에 대한 타임아웃이 발생하는 이슈가 있었다.</p>\n<h2 id=\"환경\" style=\"position:relative;\"><a href=\"#%ED%99%98%EA%B2%BD\" aria-label=\"환경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경</h2>\n<ul>\n<li>AKS에 하나의 파드에 두개의 컨테이너를 띄운 상태</li>\n<li>NAT 게이트웨이를 사용</li>\n</ul>\n<h2 id=\"이슈-시나리오\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%8A%88-%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4\" aria-label=\"이슈 시나리오 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이슈 시나리오</h2>\n<ol>\n<li>A컨테이너에서만 외부API를 호출하면 바로바로 응답이 옴</li>\n<li>B컨테이너에서만 외부API를 호출하면 바로바로 응답이 옴</li>\n<li>A컨테이너에서 외부API호출 후 바로 B컨테이너에서  외부API를 호출하면 타임아웃이 발생함</li>\n</ol>\n<p>AKS초기 구성시에는 해당 현상이 발생하지 않았었다.\n그런데, 어느 순간 해당 현상이 발생하기 시작했다.</p>\n<p>서버 구축을 해주던 인프라팀에서 “tcp_tw_reuse, tcp_tw_recycle” 에 대한 세팅 이슈때문에 발생한것이라고 했다.</p>\n<p><a href=\"https://brunch.co.kr/@alden/3\">참고 블로그</a> 해당 블로그 내용에서 NAT 를 사용할때 <code class=\"language-text\">tcp_tw_recycle</code> 을 활성화한 서버에 접속할경우 해당 이슈가 발생한다고 했다.<br>\n그렇다, AKS 초기 세팅에서는 발생하지 않았지만 NAT를 연결한 순간 발생한것으로 추측이된다.</p>\n<h1 id=\"재현해보자\" style=\"position:relative;\"><a href=\"#%EC%9E%AC%ED%98%84%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-label=\"재현해보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>재현해보자</h1>\n<h2 id=\"client--server-띄우기\" style=\"position:relative;\"><a href=\"#client--server-%EB%9D%84%EC%9A%B0%EA%B8%B0\" aria-label=\"client  server 띄우기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Client / Server 띄우기</h2>\n<ul>\n<li>도커로 Client 와 Server 를 구축해보자</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">\n<span class=\"token comment\"># 네트워크 생성</span>\n<span class=\"token function\">docker</span> network create tw-net\n\n<span class=\"token comment\"># 서버</span>\n<span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span> server_test <span class=\"token parameter variable\">--net</span> tw-net <span class=\"token parameter variable\">-p</span> <span class=\"token number\">91</span>:80 <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--privileged</span> ubuntu:20.04\n<span class=\"token function\">apt</span> update\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> nginx\n<span class=\"token function\">service</span> nginx start\n\n<span class=\"token comment\"># 클라이언트</span>\n<span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span> client_test <span class=\"token parameter variable\">--net</span> tw-net <span class=\"token parameter variable\">-p</span> <span class=\"token number\">92</span>:80 <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--privileged</span> ubuntu:20.04\n\n<span class=\"token comment\"># 필요한 라이브러리 설치</span>\n<span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> net-tools\n<span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">vim</span>\n</code></pre></div>\n<h2 id=\"client-에서-tcp_tw_reuse-활성화하기\" style=\"position:relative;\"><a href=\"#client-%EC%97%90%EC%84%9C-tcp_tw_reuse-%ED%99%9C%EC%84%B1%ED%99%94%ED%95%98%EA%B8%B0\" aria-label=\"client 에서 tcp_tw_reuse 활성화하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Client 에서 tcp_tw_reuse 활성화하기</h2>\n<ol>\n<li>Client -> Server 호출해보기</li>\n</ol>\n<ul>\n<li>Docker 네트워크 상에서 Server IP를 확인하자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">docker</span> network inspect tw-net\n<span class=\"token punctuation\">..</span>.\n\n<span class=\"token string\">\"Containers\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"4e879dc9a3e1ced91553d6464d98361ab639bb229d21780234f254c9ab2e8763\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"Name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"client_test\"</span>,\n        <span class=\"token string\">\"EndpointID\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"aff17140447ea02482cf5dd79ee032bfc26ce5d4bfbd643396b71a354a3e2008\"</span>,\n        <span class=\"token string\">\"MacAddress\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"02:42:ac:14:00:03\"</span>,\n        <span class=\"token string\">\"IPv4Address\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"172.20.0.3/16\"</span>,\n        <span class=\"token string\">\"IPv6Address\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token punctuation\">}</span>,\n    <span class=\"token string\">\"911846c368f7419762ce537c1e002b5626b2f7a3953eec0addc945fac9914a6a\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"Name\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"server_test\"</span>,\n        <span class=\"token string\">\"EndpointID\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"b0f83e1544bd7d1d7db17759324ea4b7018913c977e15f6b7fcd734bc1f54a41\"</span>,\n        <span class=\"token string\">\"MacAddress\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"02:42:ac:14:00:02\"</span>,\n        <span class=\"token string\">\"IPv4Address\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"172.20.0.2/16\"</span>, <span class=\"token operator\">&lt;=</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span> Server IP\n        <span class=\"token string\">\"IPv6Address\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>,\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n<ol start=\"2\">\n<li>호출 해보자</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">root@4e879dc9a3e1:/<span class=\"token comment\"># curl 172.20.0.2</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Welcome to nginx<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span>/title<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n    body <span class=\"token punctuation\">{</span>\n        width: 35em<span class=\"token punctuation\">;</span>\n        margin: <span class=\"token number\">0</span> auto<span class=\"token punctuation\">;</span>\n        font-family: Tahoma, Verdana, Arial, sans-serif<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>/style<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/head<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span>Welcome to nginx<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span>\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.<span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>For online documentation and support please refer to\n<span class=\"token operator\">&lt;</span>a <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://nginx.org/\"</span><span class=\"token operator\">></span>nginx.org<span class=\"token operator\">&lt;</span>/a<span class=\"token operator\">></span>.<span class=\"token operator\">&lt;</span>br/<span class=\"token operator\">></span>\nCommercial support is available at\n<span class=\"token operator\">&lt;</span>a <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://nginx.com/\"</span><span class=\"token operator\">></span>nginx.com<span class=\"token operator\">&lt;</span>/a<span class=\"token operator\">></span>.<span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span>Thank you <span class=\"token keyword\">for</span> using nginx.<span class=\"token operator\">&lt;</span>/em<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/html<span class=\"token operator\">></span> </code></pre></div>\n<p>정상적으로 호출되는것을 알 수 있다.</p>\n<ol start=\"3\">\n<li>계속 호출해서 TIME_WAIT를 확인해보자</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 4번 호출후 확인 </span>\nroot@4e879dc9a3e1:/<span class=\"token comment\"># netstat -n -t | grep 'TIME_WAIT'</span>\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">172.20</span>.0.3:42604        <span class=\"token number\">172.20</span>.0.2:80           TIME_WAIT\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">172.20</span>.0.3:42614        <span class=\"token number\">172.20</span>.0.2:80           TIME_WAIT\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">172.20</span>.0.3:42640        <span class=\"token number\">172.20</span>.0.2:80           TIME_WAIT\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">172.20</span>.0.3:42630        <span class=\"token number\">172.20</span>.0.2:80           TIME_WAIT\n</code></pre></div>\n<p>각각의 다른 포트로 호출되는것을 확인할 수 있다.</p>\n<blockquote>\n<p>그렇다면 포트를 하나로 줄이면 어떻게 될까? (포트를 고갈시켜보자)</p>\n</blockquote>\n<ol start=\"4\">\n<li>포트를 하나로 줄여서 호출해보자</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 설정 파일</span>\n<span class=\"token function\">vim</span> /etc/sysctl.conf\n\n<span class=\"token comment\"># 하단에 추가 </span>\nnet.ipv4.ip_local_port_range <span class=\"token operator\">=</span> <span class=\"token number\">32768</span> <span class=\"token number\">32768</span>\n\n<span class=\"token comment\"># 변경 내용 적용</span>\n<span class=\"token function\">sysctl</span> <span class=\"token parameter variable\">-p</span>\n\n<span class=\"token comment\"># 호출하기</span>\nroot@4e879dc9a3e1:/<span class=\"token comment\"># curl 172.20.0.2</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Welcome to nginx<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span>/title<span class=\"token operator\">></span>\n<span class=\"token punctuation\">..</span>.\n\nroot@4e879dc9a3e1:/<span class=\"token comment\"># curl 172.20.0.2</span>\ncurl: <span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span> Couldn<span class=\"token string\">'t connect to server\n \nroot@4e879dc9a3e1:/# netstat -n -t | grep '</span>TIME_WAIT'\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">172.20</span>.0.3:32768        <span class=\"token number\">172.20</span>.0.2:80           TIME_WAIT\n</code></pre></div>\n<ul>\n<li>두번째 호출에서 <code class=\"language-text\">curl: (7) Couldn't connect to server</code> 발생한다.</li>\n</ul>\n<ol start=\"5\">\n<li>그렇다면, 이때 <code class=\"language-text\">tcp_tw_reuse</code> 를 활성화하면 어떻게 될까?</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">\n<span class=\"token comment\"># 설정 파일</span>\n<span class=\"token function\">vim</span> /etc/sysctl.conf\n\n<span class=\"token comment\"># 하단에 추가</span>\nnet.ipv4.tcp_tw_reuse <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token comment\"># 변경 내용 적용</span>\n<span class=\"token function\">sysctl</span> <span class=\"token parameter variable\">-p</span> \n\n<span class=\"token comment\"># 여러번 호출하기</span>\n<span class=\"token function\">curl</span> <span class=\"token number\">172.20</span>.0.2 \n\n- 정상 호출됨</code></pre></div>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<ul>\n<li><code class=\"language-text\">tcp_tw_reuse</code> 를 활성화하면, TIME_WAIT 상태의 포트를 재사용할 수 있다.</li>\n<li>자세한 내용은 <a href=\"https://cyuu.tistory.com/139\">https://cyuu.tistory.com/139</a> 여기를 참고</li>\n</ul>\n<h2 id=\"tcp_tw_recycle\" style=\"position:relative;\"><a href=\"#tcp_tw_recycle\" aria-label=\"tcp_tw_recycle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tcp_tw_recycle!?</h2>\n<ul>\n<li>tcp_tw_recycle 은 Linux 4.12 on 2017 이후 제거 되었다고 한다 (<a href=\"https://djangocas.dev/blog/troubleshooting-tcp_tw_recycle-no-such-file-or-directory/\">참고</a>)</li>\n<li>docker ubuntu 20.04 에서는 <code class=\"language-text\">tcp_tw_recycle</code> 설정이 없다. 그래서 다른 블로그의 테스트를 참고해보길 바란다.\n<ul>\n<li><a href=\"https://brunch.co.kr/@alden/3\">tcp_tw_reuse와 tcp_tw_recycle</a> 여기 블로그를 보면 자세한 내용을 확인할수있다.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"회고\" style=\"position:relative;\"><a href=\"#%ED%9A%8C%EA%B3%A0\" aria-label=\"회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회고</h1>\n<p>처음에 해당 현상이 발생했을때, azure의 네트워크 이슈인지 알았다.<br>\n나는 어플리케이션 레벨에서 이슈를 찾을려고 했다. 당연히 찾을 수 가 없었다.<br>\n이번의 계기로 다양한 범위에서 이슈를 찾기위한 노력이 필요하다는것을 알게 되었다.</p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://cyuu.tistory.com/139\">https://cyuu.tistory.com/139</a></li>\n<li><a href=\"https://brunch.co.kr/@alden/\">https://brunch.co.kr/@alden/</a></li>\n</ul>","excerpt":"개요? 최근에 프로젝트를 진행하면서, 리눅스 커널단의 설정에 의해 이슈가 발생하였다. 그래서 이번 기회에 TCP_TW 설정에 대해 알아보고자 한다. 이전에 이슈가 된 설정은 ,  옵션이었는데, 이 옵션들은  상태의 소켓을 재사용하는 옵션이다. TIME_WAIT? TIME_WAIT 상태는 TCP 연결이 종료된 후, 일정 시간 동안 유지되는 상태이다. 이슈 최근 azure 의 를 세팅하면서 외부 요청에 대한 타임아웃이 발생하는 이슈가 있었다. 환경 AKS에 하나의 파드에 두개의 컨테이너를 띄운 상태 NAT 게이트웨이를 사용 이슈 시나리오 A컨테이너에서만 외부API를 호출하면 바로바로 응답이 옴 B컨테이너에서만 외부API를 호출하면 바로바로 응답이 옴 A컨테이너에서 외부API호출 후 바로 B컨테이너에서  외부API를 호출하면 타임아웃이 발생함 AKS초기 구성시에는 해당 현상이 발생하지 않았었다.\n그런데, 어느 순간 해당 현상이 발생하기 시작했다. 서버 구축을 해주던 인프라팀에서 “tcp…","frontmatter":{"date":"July 31, 2023","title":"TCP_TW 옵션?","categories":"프로그래밍","author":"wooobo","emoji":"🔮"},"fields":{"slug":"/network/2023-07-31-tcp-tw/"}},"next":{"id":"6b7a935e-2598-51b1-8611-0d5844b99ab8","html":"<h2 id=\"레디스를-적용해보자\" style=\"position:relative;\"><a href=\"#%EB%A0%88%EB%94%94%EC%8A%A4%EB%A5%BC-%EC%A0%81%EC%9A%A9%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-label=\"레디스를 적용해보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레디스를 적용해보자</h2>\n<hr>\n<h2 id=\"시나리오\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4\" aria-label=\"시나리오 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시나리오</h2>\n<p>1. Coupon 이 생성 될때, 발행갯수만큼 CouponTicket(userId가 null 상태)을 DB에 저장한다.</p>\n<p>2. 쿠폰 발급, CouponTicket의 ID를 Redis에 쌓는다.</p>\n<p>3. 쿠폰 배급 Redis에 쌓이 CouponTicket을 가져온다.</p>\n<ul>\n<li>\n<p>가져온 CouponTicket이 이미 userId가 정해져있는지 DB에 확인하고 정해져 있지 않다면 userId를 맵핑하고 저장한다.</p>\n</li>\n<li>\n<p>쿠폰티켓 결과를 반환해준다.</p>\n</li>\n</ul>\n<h3 id=\"구현\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84\" aria-label=\"구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현</h3>\n<p>1. Coupon 이 생성 될때, 발행갯수만큼 CouponTicket(userId가 null 상태)을 DB에 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CouponController</span> <span class=\"token punctuation\">{</span>\n\t\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    \n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"api/create\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token keyword\">int</span> limit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        couponGenerateService<span class=\"token punctuation\">.</span><span class=\"token function\">generate</span><span class=\"token punctuation\">(</span>limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n<span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CouponGenerateService</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">CouponRepository</span> couponRepository<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">CouponTicketRepository</span> couponTicketRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CouponGenerateService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CouponRepository</span> couponRepository<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CouponTicketRepository</span> couponTicketRepository<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>couponRepository <span class=\"token operator\">=</span> couponRepository<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>couponTicketRepository <span class=\"token operator\">=</span> couponTicketRepository<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Transactional</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">generate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> limit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Coupon</span> coupon <span class=\"token operator\">=</span> <span class=\"token class-name\">Coupon</span><span class=\"token punctuation\">.</span><span class=\"token function\">limitOf</span><span class=\"token punctuation\">(</span>limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        couponRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>coupon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CouponTicket</span><span class=\"token punctuation\">></span></span> couponTickets <span class=\"token operator\">=</span> coupon<span class=\"token punctuation\">.</span><span class=\"token function\">allPublish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        couponTicketRepository<span class=\"token punctuation\">.</span><span class=\"token function\">saveAll</span><span class=\"token punctuation\">(</span>couponTickets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>2. 쿠폰 발급, CouponTicket의 ID를 Redis에 쌓는다.</p>\n<p>여러 방법이 있겠지만, 스케쥴러를 적용해보기로 했다.</p>\n<p>일정 갯수 이하일때 Redis에 쌓기.</p>\n<p><strong>Redis 설정하기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RedisConfig</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${spring.data.redis.host}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> redisHost<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${spring.data.redis.port}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> redisPort<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">RedisConnectionFactory</span> <span class=\"token function\">redisConnectionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LettuceConnectionFactory</span><span class=\"token punctuation\">(</span>redisHost<span class=\"token punctuation\">,</span> redisPort<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">redisTemplate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> redisTemplate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">setConnectionFactory</span><span class=\"token punctuation\">(</span><span class=\"token function\">redisConnectionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">setKeySerializer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">StringRedisSerializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">setValueSerializer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">GenericJackson2JsonRedisSerializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> redisTemplate<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>스케쥴러 적용</strong></p>\n<ul>\n<li>1초에 한번씩 체크</li>\n<li>2000개 이하일때 10000개씩 밀어 넣게 구현</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CouponTicketRedisScheduler</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> redisTemplate<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">CouponTicketRepository</span> couponTicketRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CouponTicketRedisScheduler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> redisTemplate<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CouponTicketRepository</span> couponTicketRepository<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>redisTemplate <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>couponTicketRepository <span class=\"token operator\">=</span> couponTicketRepository<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Scheduled</span><span class=\"token punctuation\">(</span>fixedDelay <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Long</span> couponId <span class=\"token operator\">=</span> <span class=\"token number\">2L</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">ListOperations</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> valueOperations <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Long</span> remainCount <span class=\"token operator\">=</span> valueOperations<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token function\">generateKey</span><span class=\"token punctuation\">(</span>couponId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">generateCouponTicket</span><span class=\"token punctuation\">(</span>remainCount<span class=\"token punctuation\">,</span> couponId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"finished\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">void</span> <span class=\"token function\">generateCouponTicket</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> remainCount<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span> couponId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Pageable</span> page <span class=\"token operator\">=</span> <span class=\"token class-name\">Pageable</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Stream</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CouponTicket</span><span class=\"token punctuation\">></span></span> couponTickets <span class=\"token operator\">=</span> couponTicketRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findByCouponIdAndUserIdNull</span><span class=\"token punctuation\">(</span>couponId<span class=\"token punctuation\">,</span> page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>remainCount <span class=\"token operator\">&lt;</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">ListOperations</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> valueOperations <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span> couponTicketIds <span class=\"token operator\">=</span> couponTickets<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CouponTicket</span><span class=\"token operator\">::</span><span class=\"token function\">getId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            valueOperations<span class=\"token punctuation\">.</span><span class=\"token function\">rightPushAll</span><span class=\"token punctuation\">(</span><span class=\"token function\">generateKey</span><span class=\"token punctuation\">(</span>couponId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> couponTicketIds<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> <span class=\"token function\">generateKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> couponId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"couponTickets:\"</span> <span class=\"token operator\">+</span> couponId<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>3. 쿠폰 배급 Redis에 쌓이 CouponTicket을 가져온다.</p>\n<p>- 컨트롤러</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"api/publish/{userId}/{couponId}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TicketDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">publish</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Long</span> userId<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Long</span> couponId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">CouponTicket</span> couponTicket <span class=\"token operator\">=</span> couponTicketRedis<span class=\"token punctuation\">.</span><span class=\"token function\">publish</span><span class=\"token punctuation\">(</span>couponId<span class=\"token punctuation\">,</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>couponTicket <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TicketDto</span><span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>couponTicket<span class=\"token punctuation\">.</span><span class=\"token function\">getCouponId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TicketDto</span><span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>- Reids 에서 쿠폰 티켓 가져오기 서비스</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CouponTicketRedis</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> redisTemplate<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">CouponTicketRepository</span> couponTicketRepository<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CouponTicketRedis</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedisTemplate</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> redisTemplate<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CouponTicketRepository</span> couponTicketRepository<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>redisTemplate <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>couponTicketRepository <span class=\"token operator\">=</span> couponTicketRepository<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CouponTicket</span> <span class=\"token function\">publish</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> couponId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span> userId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">ListOperations</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> valueOperations <span class=\"token operator\">=</span> redisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 티켓 POP</span>\n        <span class=\"token class-name\">CouponTicket</span> couponTicket <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CouponTicket</span><span class=\"token punctuation\">)</span> valueOperations<span class=\"token punctuation\">.</span><span class=\"token function\">leftPop</span><span class=\"token punctuation\">(</span><span class=\"token function\">generateKey</span><span class=\"token punctuation\">(</span>couponId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>couponTicket <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NoSuchElementException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"쿠폰이 존재하지 않습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 유저 세팅</span>\n        couponTicket<span class=\"token punctuation\">.</span><span class=\"token function\">owner</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 유저 세팅 후 저장</span>\n        couponTicketRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>couponTicket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> couponTicket<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> <span class=\"token function\">generateKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> couponId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"couponTickets:\"</span> <span class=\"token operator\">+</span> couponId<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"부하-테스트\" style=\"position:relative;\"><a href=\"#%EB%B6%80%ED%95%98-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"부하 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부하 테스트</h2>\n<p>k6 부하 테스트</p>\n<p>- script.js</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">http</span> from 'k6<span class=\"token operator\">/</span>http'<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>check<span class=\"token punctuation\">,</span> sleep<span class=\"token punctuation\">}</span> from <span class=\"token char\">'k6'</span><span class=\"token punctuation\">;</span>\n\nexport <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    stages<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>duration<span class=\"token operator\">:</span> <span class=\"token string\">\"10s\"</span><span class=\"token punctuation\">,</span> target<span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>duration<span class=\"token operator\">:</span> <span class=\"token string\">\"10s\"</span><span class=\"token punctuation\">,</span> target<span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>duration<span class=\"token operator\">:</span> <span class=\"token string\">\"10s\"</span><span class=\"token punctuation\">,</span> target<span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>duration<span class=\"token operator\">:</span> <span class=\"token string\">\"10s\"</span><span class=\"token punctuation\">,</span> target<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    thresholds<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        http_req_duration<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>'<span class=\"token function\">p</span><span class=\"token punctuation\">(</span><span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">100</span>'<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nexport <span class=\"token keyword\">default</span> function <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>`http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>localhost<span class=\"token operator\">:</span><span class=\"token number\">8080</span><span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>publish<span class=\"token operator\">/</span>$<span class=\"token punctuation\">{</span><span class=\"token function\">getRandomInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>`<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>'status was <span class=\"token number\">200</span>'<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> r<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span><span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nfunction <span class=\"token function\">getRandomInt</span><span class=\"token punctuation\">(</span>min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    min <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    max <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">-</span> min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> min<span class=\"token punctuation\">;</span> <span class=\"token comment\">//최댓값은 제외, 최솟값은 포함</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>테스트 결과</strong></p>\n<p><img src=\"../content/series/coupon/coupon-3-01.png\" alt=\"\"></p>\n<p>평균 100ms 이하로 나왔다.</p>\n<p>지연되는 부분은</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">        <span class=\"token comment\">// 유저 세팅 후 저장</span>\n        couponTicketRepository<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>couponTicket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"db-pool-size-조정해보면-어떨까\" style=\"position:relative;\"><a href=\"#db-pool-size-%EC%A1%B0%EC%A0%95%ED%95%B4%EB%B3%B4%EB%A9%B4-%EC%96%B4%EB%96%A8%EA%B9%8C\" aria-label=\"db pool size 조정해보면 어떨까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DB POOL SIZE 조정해보면 어떨까?</h2>\n<p>문득 DB 커넥션 POOL을 늘리면 빨라지지 좀 더 최적화 할 수 있지 않을까 생각이 되었다.</p>\n<p>설정을 추가했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">spring.datasource.hikari.maximum-pool-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></code></pre></div>\n<p>그리고 pool size 를 나누어 테스트 해보았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"language-md\"><code class=\"language-md\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> DB pool size 25</span>\navg=403.13ms min=2.63ms med=521.26ms max=999.98ms p(90)=712.01ms p(95)=755.75ms\navg=453.87ms min=2.79ms med=584.58ms max=1.17s   p(90)=808.83ms p(95)=942.38ms\navg=430.86ms min=2.79ms med=564.97ms max=1.24s    p(90)=861.28ms p(95)=947.41ms\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> DB pool size 50</span>\navg=327.05ms min=2.65ms med=354.36ms max=1.62s   p(90)=634.81ms p(95)=1.07s\navg=167.88ms min=2.33ms med=192.51ms max=580.31ms p(90)=329.93ms p(95)=395.59ms\navg=229.95ms min=2.6ms  med=312.7ms  max=686.1ms  p(90)=431.14ms p(95)=460.81ms\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> DB pool size 75</span>\navg=295.76ms min=3.05ms med=327.56ms max=927.11ms p(90)=614.81ms p(95)=676.6ms\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> DB pool size 100</span>\navg=178.74ms min=2.55ms med=208.44ms max=560.36ms p(90)=342.46ms p(95)=376.09ms\navg=163.61ms min=2.71ms med=133.92ms max=626.94ms p(90)=374.09ms p(95)=451.05ms\navg=205.32ms min=1.11ms med=215.16ms max=708.67ms p(90)=426.21ms p(95)=503.23ms</code></pre></div>\n<p>나름 유의미한 결과가 나왔다.<br>\n현재 로컬 구조는 <code class=\"language-text\">docker Mysql</code>, <code class=\"language-text\">docker Redis</code>, <code class=\"language-text\">Local Spring boot Server</code> 이다.<br>\nPC는 맥북 에어 m2이다.</p>\n<p>현재 사양에서는 DB pool size 100 일때 가장 최적화된것으로 확인되었다.<br>\npool size 를 더 늘려보았지만, DB 사양 한계치가 있어서인지 그이상은 오히려 느려졌다.</p>\n<p><strong>서버 스레드 늘리면?</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"language-md\"><code class=\"language-md\">server.tomcat.threads.max=20\n\nDB pool size 50, tomcat threads 20\navg=464.32ms min=2.6ms  med=623.78ms max=882.89ms p(90)=821.75ms p(95)=838.93ms\navg=496.68ms min=2.68ms med=649.88ms max=987.8ms  p(90)=866.58ms p(95)=934.47ms\navg=539.1ms  min=2.77ms med=553.2ms  max=1.35s   p(90)=1.08s p(95)=1.15s</code></pre></div>\n<p>어차피 DB의 한계 때문에 <code class=\"language-text\">input</code> 을 마냥 많이 받는게 답은 아닌것 같다.</p>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<p>(1) 에서는 로컬 시스템 만으로 쿠폰 도메인 로직과 동시성 이슈에 대해서 알아보았고,<br>\n(2) 에서는 웹 서버로 올려서 부하테스트를 해보았다. 이벤트 기반으로 DB save 로직을 분리해보았다.<br>\n(3) 다중 서버일때의 환경을 고려해서 Redis 를 적용해보고 테스트 까지 진행해보았다.</p>\n<hr>\n<blockquote>\n<p>여러가지 시나리오를 생각하며 진행해본 작업이었는데 재미있었다.</p>\n</blockquote>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%A0%88%EB%94%94%EC%8A%A4%EB%A5%BC-%EC%A0%81%EC%9A%A9%ED%95%B4%EB%B3%B4%EC%9E%90\">레디스를 적용해보자</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4\">시나리오</a></p>\n<ul>\n<li><a href=\"#%EA%B5%AC%ED%98%84\">구현</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%B6%80%ED%95%98-%ED%85%8C%EC%8A%A4%ED%8A%B8\">부하 테스트</a></p>\n</li>\n<li>\n<p><a href=\"#db-pool-size-%EC%A1%B0%EC%A0%95%ED%95%B4%EB%B3%B4%EB%A9%B4-%EC%96%B4%EB%96%A8%EA%B9%8C\">DB POOL SIZE 조정해보면 어떨까?</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%95%EB%A6%AC\">정리</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"May 23, 2023","title":"쿠폰 발급 (3) - 레디스 적용","categories":"시리즈","author":"wooobo","emoji":"3️⃣"},"fields":{"slug":"/series/coupon/coupon3/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://wooobo.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/network/2023-07-31-tcp-tw/","nextSlug":"/series/coupon/coupon3/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}