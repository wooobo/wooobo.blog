{"componentChunkName":"component---src-templates-blog-template-js","path":"/tdd/2022-01-12-unit-testing-01/","result":{"data":{"cur":{"id":"6e4f1560-4cd7-50d6-91c0-f2709b55ba7c","html":"<blockquote>\n<p>“Unit Testing - 블라디미르 코리코프 지음” 책을 학습하여 일부 내용을 요약하였습니다.</p>\n</blockquote>\n<h2 id=\"단위-테스트의-목표\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EB%AA%A9%ED%91%9C\" aria-label=\"단위 테스트의 목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단위 테스트의 목표</h2>\n<ul>\n<li>테스트로 대부분의 회귀에 대한 보험을 제공하는 도구라 할 수 있다.</li>\n<li>새로운 요구 사항에 더 잘 맞게 리팩터링한 후에도 기존 기능이 잘 작동하는지 확인하는데 도움이 된다.</li>\n<li>테스트 초반에 (상당한)노력이 필요하다.\n<ul>\n<li>그러나 프로젝트 후반에도 잘 성장할 수 있도록 하므로 장기적으로 보면 그 비용을 메울 수 있다.</li>\n</ul>\n</li>\n<li><strong>지속성과 확장성이 핵심이며, 이를 통해 장기적으로 개발 속도를 유지 할 수 있다.</strong></li>\n</ul>\n<h2 id=\"잘못-된-테스트\" style=\"position:relative;\"><a href=\"#%EC%9E%98%EB%AA%BB-%EB%90%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"잘못 된 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>잘못 된 테스트</h2>\n<ul>\n<li>잘못된 테스트는 초반에 코드가 나빠지는것을 늦출 수는 있다.<br>\n테스트가 없는 상황에 비해 개발 속도가 덜 느려진다.<br>\n그러나, 잘못 된 테스트로 진행한다면 시간이 지남에 따라 프로젝트 침체단계를 필할 수는 없다.</li>\n</ul>\n<h2 id=\"제품-코드-대-테스트-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%92%88-%EC%BD%94%EB%93%9C-%EB%8C%80-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C\" aria-label=\"제품 코드 대 테스트 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제품 코드 대 테스트 코드</h2>\n<ul>\n<li>제품코드와 테스트 코드는 다르다고 생각하지만 다르지 않다. 테스트 코드가 많을수록 좋다고 생각하지만,\n그렇지 않다. 코드는 자산이 아니라 책임이다. 코드가 많아 질수록 잠재적인 버그가 많아 지고 유지비가 증가된다.\n테스트 코드 역시 코드다. 특정 문제를 해결하는것. 다른 코드와 마찬가지로 단위 테스트도 버그에 취약하고 유지보수가 필요하다</li>\n</ul>\n<h2 id=\"외부-라이브러리의-코드-경로를-고려할-수-없음\" style=\"position:relative;\"><a href=\"#%EC%99%B8%EB%B6%80-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EC%9D%98-%EC%BD%94%EB%93%9C-%EA%B2%BD%EB%A1%9C%EB%A5%BC-%EA%B3%A0%EB%A0%A4%ED%95%A0-%EC%88%98-%EC%97%86%EC%9D%8C\" aria-label=\"외부 라이브러리의 코드 경로를 고려할 수 없음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>외부 라이브러리의 코드 경로를 고려할 수 없음</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">public static int Parse(string input) \n{\n    return int.parse(input);\n}\n\npublic void test() \n{\n    int result = Parse(\"5\");\n    Assert.Equal(5, result);\n}</code></pre></div>\n<p>테스트는 모든 구성 요소를 검증한다. 단지 값을 반환하는 한 줄이라 하더라도 단일한 구성 요소이기는 하다.\n하지만, 테스트는 완벽하지 않다. 프레임워크의 int.parse 메서드가 수행하는 코드 경로는 고려하지 않았다.<br>\n<code class=\"language-text\">null</code>,<code class=\"language-text\">\"\"</code>,<code class=\"language-text\">5</code>,<code class=\"language-text\">정수가 아님</code>,<code class=\"language-text\">너무 긴 문자열</code>  숨겨진 분기가 많다.<br>\n수 많은 예외상황을 모두 테스트로 다루는지 확인 할 수 없다.\n이는 커버리지 지표가 외부 라이브러리의 코드 경로를 고려야해야 한다는것은 아니다.(고려하면 안된다.)\n커버리지 지표로 테스트가 철저한지 또는 테스트가 충분하지 알 수 없다.<br>\n[<a href=\"https://err0rcode7.github.io/backend/2021/05/11/%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BB%A4%EB%B2%84%EB%A6%AC%EC%A7%80.html\">테스트 커버리지 참고 링크</a>]</p>\n<h2 id=\"요약\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h2>\n<p>코드는 점점 나빠지는 경향이 있다. 코드가 변경 될때마다 코드의 무질서도(엔트로피)는 증가된다. 이러한 상황에서 지속적인 정리와 리팩토링이 없으면\n시스템은 점점 복잡해지고 흐트러진다. 테스트로 이러한 부분을 뒤집을 수 있다. 테스트는 안전망 역할을 하며 대부분의 회귀에 대한\n보험을 제공하는 도구라 할 수 있다.</p>\n<hr>\n<blockquote>\n<p>“Unit Testing - 블라디미르 코리코프 지음” 책을 학습하여 일부 내용을 요약하였습니다.</p>\n</blockquote>","excerpt":"“Unit Testing - 블라디미르 코리코프 지음” 책을 학습하여 일부 내용을 요약하였습니다. 단위 테스트의 목표 테스트로 대부분의 회귀에 대한 보험을 제공하는 도구라 할 수 있다. 새로운 요구 사항에 더 잘 맞게 리팩터링한 후에도 기존 기능이 잘 작동하는지 확인하는데 도움이 된다. 테스트 초반에 (상당한)노력이 필요하다. 그러나 프로젝트 후반에도 잘 성장할 수 있도록 하므로 장기적으로 보면 그 비용을 메울 수 있다. 지속성과 확장성이 핵심이며, 이를 통해 장기적으로 개발 속도를 유지 할 수 있다. 잘못 된 테스트 잘못된 테스트는 초반에 코드가 나빠지는것을 늦출 수는 있다. 테스트가 없는 상황에 비해 개발 속도가 덜 느려진다. 그러나, 잘못 된 테스트로 진행한다면 시간이 지남에 따라 프로젝트 침체단계를 필할 수는 없다. 제품 코드 대 테스트 코드 제품코드와 테스트 코드는 다르다고 생각하지만 다르지 않다. 테스트 코드가 많을수록 좋다고 생각하지만,\n그렇지 않다. 코드는 자산이 아…","frontmatter":{"date":"January 12, 2022","title":"단위 테스트의 목표","categories":"프로그래밍","author":"wooobo","emoji":"🔮"},"fields":{"slug":"/tdd/2022-01-12-unit-testing-01/"}},"next":{"id":"00ef5447-0b9d-5f41-ae9b-693cd77b7b36","html":"<p>개발 하던중 이벤트 발생 서버와 처리하는 서버가 다를 경우 이벤트 전달에 대해서 고민을 한적이 있습니다.<br>\n그때에, “마이크로서비스 이렇게 한다”책을 보게 되었는데 책에서 <code class=\"language-text\">CDC</code>라는 기술이 있다는것을 알게 되었습니다.</p>\n<p>이후 <code class=\"language-text\">CDC</code>기술에 대해 관심을 가지게 되었고, <code class=\"language-text\">CDC</code>를 활용한다면 서버간의 유연함을 유지하면서 이벤트 기반 아키텍쳐를 구현 할 수 있을것 같았습니다.<br>\n이번 글에서는 Kafka와 CDC 를 위한 분산 플랫폼 Debezium 의 세팅하고 기본 사용하는 부분에 대해서 알아보겠습니다.</p>\n<h1 id=\"카프카란\" style=\"position:relative;\"><a href=\"#%EC%B9%B4%ED%94%84%EC%B9%B4%EB%9E%80\" aria-label=\"카프카란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>카프카란?</h1>\n<blockquote>\n<p>Kafka는 실시간 이벤트 기반 애플리케이션 개발을 가능하게하는 오픈 소스 분산 스트리밍 플랫폼이다.</p>\n</blockquote>\n<h1 id=\"debezium-이란\" style=\"position:relative;\"><a href=\"#debezium-%EC%9D%B4%EB%9E%80\" aria-label=\"debezium 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>debezium 이란?</h1>\n<blockquote>\n<p>Debezium 이란 CDC 를 위한 오픈 소스 분산 플랫폼입니다.<br>\n데이터베이스 커밋으로 발생하는 삽입,업데이트,삭제를 감지하고 인벤트를 발생 시킵니다.<br>\nApache Kafka 를 기반으로 구축 되었습니다.</p>\n</blockquote>\n<h1 id=\"cdc-란\" style=\"position:relative;\"><a href=\"#cdc-%EB%9E%80\" aria-label=\"cdc 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CDC 란?</h1>\n<blockquote>\n<p>CDC 는 Change Data Capture 의 약자입니다.<br>\n데이터베이스에서 변경 데이터 캡처(change data capture, CDC)는 변경된 데이터를 사용하여 동작을 취할 수 있도록 데이터를 결정하고 추적하기 위해 사용되는 여러 소프트웨어 디자인 패턴들의 모임입니다.</p>\n</blockquote>\n<h1 id=\"시작하기\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"시작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작하기</h1>\n<hr>\n<h2 id=\"카프카-실행하기\" style=\"position:relative;\"><a href=\"#%EC%B9%B4%ED%94%84%EC%B9%B4-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"카프카 실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>카프카 실행하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">\n<span class=\"token comment\"># 카프카를 다운</span>\n<span class=\"token function\">wget</span> https://www.apache.org/dyn/closer.cgi?path<span class=\"token operator\">=</span>/kafka/3.0.0/kafka_2.13-3.0.0.tgz\n\n<span class=\"token comment\"># 압축 해제</span>\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xzf</span> kafka_2.13-3.0.0.tgz\n\n<span class=\"token comment\"># zookeeper 실행</span>\nbin/zookeeper-server-start.sh config/zookeeper.properties\n\n<span class=\"token comment\"># kafka 실행</span>\nbin/kafka-server-start.sh config/server.properties\n\n<span class=\"token comment\"># topic list 확인</span>\nbin/kafka-topics.sh --bootstrap-server localhost:9092  <span class=\"token parameter variable\">--list</span>\n<span class=\"token operator\">></span> __consumer_offsets</code></pre></div>\n<p>주키퍼와 카프카 실행커멘드까지 살펴보았습니다.</p>\n<p>debezium 을 설치 해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># mysql connect 라이브러리를 다운받습니다</span>\n<span class=\"token comment\"># 이외에도  Postgres, MonggoDB 등등도 가능하므로, 링크 참고(https://debezium.io/documentation/reference/1.8/install.html) </span>\n<span class=\"token function\">wget</span> https://repo1.maven.org/maven2/io/debezium/debezium-connector-mysql/1.8.0.Final/debezium-connector-mysql-1.8.0.Final-plugin.tar.gz\n\n<span class=\"token comment\"># 압축 해제</span>\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-xzf</span> debezium-connector-mysql-1.8.0.Final-plugin.tar.gz\n<span class=\"token comment\"># debezium 폴더 파일</span>\nCHANGELOG.md   LICENSE-3rd-PARTIES.txt  README_JA.md            debezium-api-1.8.0.Final.jar              debezium-ddl-parser-1.8.0.Final.jar  mysql-binlog-connector-java-0.25.4.jar\nCONTRIBUTE.md  LICENSE.txt              README_ZH.md            debezium-connector-mysql-1.8.0.Final.jar  failureaccess-1.0.1.jar              mysql-connector-java-8.0.27.jar\nCOPYRIGHT.txt  README.md                antlr4-runtime-4.8.jar  debezium-core-1.8.0.Final.jar             guava-30.0-jre.jar\n---</code></pre></div>\n<p>해당 폴더를 kafka/libs 폴더안으로 이동시켜줍니다.(다른 폴더에 있을때, mysql-connector 를 찾지 못하더라구요)</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 이렇게 이동 시켰습니다.</span>\nkafka_2.13-3.0.0/libs/debezium-connector-mysql</code></pre></div>\n<p>그리고 kafka-connect 설정을 해줘야합니다.<br>\n카프카 프로젝트 안에 <code class=\"language-text\">config/connect-distributed.properties</code> 파일에서</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># config/connect-distributed.properties 파일을 열고 최하단있는 \"plugin.path\" 설정을 수정해야됩니다.</span>\n<span class=\"token comment\"># debezium 라이브러리 위치와 카프카 libs 경로를 지정해줍니다.</span>\n<span class=\"token assign-left variable\">plugin.path</span><span class=\"token operator\">=</span>/home/kafka_2.13-3.0.0/libs, /kafka_2.13-3.0.0/libs/debezium-connector-mysql,</code></pre></div>\n<p>그리고 kafka connect 를 실행하면 되는데요,<br>\n커맨드는 <code class=\"language-text\">bin/connect-distributed.sh config/connect-distributed.properties</code> 입니다.\n해당 커멘드를 치고</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">[</span><span class=\"token number\">2022</span>-01-11 <span class=\"token number\">22</span>:12:05,041<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>test-db-connectabc<span class=\"token operator\">|</span>task-0<span class=\"token punctuation\">]</span> Connected to MySQL binlog at localhost:3306, starting at MySqlOffsetContext <span class=\"token punctuation\">[</span>sourceInfoSchema<span class=\"token operator\">=</span>Schema<span class=\"token punctuation\">{</span>io.debezium.connector.mysql.Source:STRUCT<span class=\"token punctuation\">}</span>, <span class=\"token assign-left variable\">sourceInfo</span><span class=\"token operator\">=</span>SourceInfo <span class=\"token punctuation\">[</span>currentGtid<span class=\"token operator\">=</span>null, <span class=\"token assign-left variable\">currentBinlogFilename</span><span class=\"token operator\">=</span>binlog.000002, <span class=\"token assign-left variable\">currentBinlogPosition</span><span class=\"token operator\">=</span><span class=\"token number\">2655</span>, <span class=\"token assign-left variable\">currentRowNumber</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>, <span class=\"token assign-left variable\">serverId</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>, <span class=\"token assign-left variable\">sourceTime</span><span class=\"token operator\">=</span>null, <span class=\"token assign-left variable\">threadId</span><span class=\"token operator\">=</span>-1, <span class=\"token assign-left variable\">currentQuery</span><span class=\"token operator\">=</span>null, <span class=\"token assign-left variable\">tableIds</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>, <span class=\"token assign-left variable\">databaseName</span><span class=\"token operator\">=</span>null<span class=\"token punctuation\">]</span>, <span class=\"token assign-left variable\">snapshotCompleted</span><span class=\"token operator\">=</span>false, <span class=\"token assign-left variable\">transactionContext</span><span class=\"token operator\">=</span>TransactionContext <span class=\"token punctuation\">[</span>currentTransactionId<span class=\"token operator\">=</span>null, <span class=\"token assign-left variable\">perTableEventCount</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>, <span class=\"token assign-left variable\">totalEventCount</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>, <span class=\"token assign-left variable\">restartGtidSet</span><span class=\"token operator\">=</span>null, <span class=\"token assign-left variable\">currentGtidSet</span><span class=\"token operator\">=</span>null, <span class=\"token assign-left variable\">restartBinlogFilename</span><span class=\"token operator\">=</span>binlog.000002, <span class=\"token assign-left variable\">restartBinlogPosition</span><span class=\"token operator\">=</span><span class=\"token number\">2655</span>, <span class=\"token assign-left variable\">restartRowsToSkip</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>, <span class=\"token assign-left variable\">restartEventsToSkip</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>, <span class=\"token assign-left variable\">currentEventLengthInBytes</span><span class=\"token operator\">=</span><span class=\"token number\">0</span>, <span class=\"token assign-left variable\">inTransaction</span><span class=\"token operator\">=</span>false, <span class=\"token assign-left variable\">transactionId</span><span class=\"token operator\">=</span>null, incrementalSnapshotContext <span class=\"token operator\">=</span>IncrementalSnapshotContext <span class=\"token punctuation\">[</span>windowOpened<span class=\"token operator\">=</span>false, <span class=\"token assign-left variable\">chunkEndPosition</span><span class=\"token operator\">=</span>null, <span class=\"token assign-left variable\">dataCollectionsToSnapshot</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>, <span class=\"token assign-left variable\">lastEventKeySent</span><span class=\"token operator\">=</span>null, <span class=\"token assign-left variable\">maximumKey</span><span class=\"token operator\">=</span>null<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>io.debezium.connector.mysql.MySqlStreamingChangeEventSource:1203<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2022</span>-01-11 <span class=\"token number\">22</span>:12:05,042<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>test-db-connectabc<span class=\"token operator\">|</span>task-0<span class=\"token punctuation\">]</span> Waiting <span class=\"token keyword\">for</span> keepalive thread to start <span class=\"token punctuation\">(</span>io.debezium.connector.mysql.MySqlStreamingChangeEventSource:935<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2022</span>-01-11 <span class=\"token number\">22</span>:12:05,043<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>test-db-connectabc<span class=\"token operator\">|</span>task-0<span class=\"token punctuation\">]</span> Creating thread debezium-mysqlconnector-serverName-binlog-client <span class=\"token punctuation\">(</span>io.debezium.util.Threads:287<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2022</span>-01-11 <span class=\"token number\">22</span>:12:05,145<span class=\"token punctuation\">]</span> INFO <span class=\"token punctuation\">[</span>test-db-connectabc<span class=\"token operator\">|</span>task-0<span class=\"token punctuation\">]</span> Keepalive thread is running <span class=\"token punctuation\">(</span>io.debezium.connector.mysql.MySqlStreamingChangeEventSource:942<span class=\"token punctuation\">)</span>\n이렇게 되면 연결 성공입니다.</code></pre></div>\n<p>debezium 은 rest api 를 지원하는데요,<br>\n잘 실행 됬는지 호출해봅니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Accept:application/json\"</span> localhost:8083/\n<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"version\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"3.0.0\"</span>,<span class=\"token string\">\"commit\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"8cb0a5e9d3441962\"</span>,<span class=\"token string\">\"kafka_cluster_id\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"XwZqiJE3QhytA2hnnleoJw\"</span><span class=\"token punctuation\">}</span>\n\n대충 이렇게 나오면 정상 실행중입니다.</code></pre></div>\n<p>저는 mysql connector 를 사용 할것이므로,\n로컬 mysql 서봐 커넥터를 생성 해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-i</span> <span class=\"token parameter variable\">-X</span> POST <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Accept:application/json\"</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Content-Type:application/json\"</span> localhost:8083/connectors <span class=\"token parameter variable\">-d</span> <span class=\"token string\">'{\n  \"name\": \"test-db-connect-test\",  &lt;--- 커넥션 이름\n  \"config\": {  \n    \"connector.class\": \"io.debezium.connector.mysql.MySqlConnector\", &lt;--- 컨넥션 라이브러리 \n    \"tasks.max\": \"1\",  \n    \"database.hostname\": \"localhost\",   &lt;--- DB 접속 주소\n    \"database.port\": \"3306\",            &lt;--- DB 접속 포트 \n    \"database.user\": \"debezium\",        &lt;--- DB 접속 아이디\n    \"database.password\": \"password\",    &lt;--- DB 접속 패스워드\n    \"database.server.id\": \"1\",  \n    \"database.server.name\": \"serverName-test\", \n    \"table.include.list\": \"debezium_db.users\", &lt;--- 감시하고자 하는 테이블, 포맷은 {데이터베이스 이름}.{테이블이름} 입니다 \n    \"database.history.kafka.bootstrap.servers\": \"localhost:9092\",  &lt;--- 카프카 주소( 클러스터 구성시 콤마로 붙여주면 됩니다.)\n    \"database.history.kafka.topic\": \"schema-changes.users\"   \n  }\n}'</span>\n\n<span class=\"token operator\">></span> HTTP/1.1 <span class=\"token number\">201</span> Created\n<span class=\"token operator\">></span> Date: Tue, <span class=\"token number\">11</span> Jan <span class=\"token number\">2022</span> <span class=\"token number\">13</span>:17:36 GMT\n<span class=\"token operator\">></span> Location: http://localhost:8083/connectors/test-db-connect-test\n<span class=\"token operator\">></span> Content-Type: application/json\n<span class=\"token operator\">></span> Content-Length: <span class=\"token number\">512</span>\n<span class=\"token operator\">></span> Server: Jetty<span class=\"token punctuation\">(</span><span class=\"token number\">9.4</span>.43.v20210629<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">></span>  <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"test-db-connect-test\"</span>,<span class=\"token string\">\"config\"</span>:<span class=\"token punctuation\">{</span><span class=\"token string\">\"connector.class\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"io.debezium.connector.mysql.MySqlConnector\"</span>,<span class=\"token string\">\"tasks.max\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"1\"</span>,<span class=\"token string\">\"database.hostname\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"localhost\"</span>,<span class=\"token string\">\"database.port\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"3306\"</span>,<span class=\"token string\">\"database.user\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"debezium\"</span>,<span class=\"token string\">\"database.password\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"password\"</span>,<span class=\"token string\">\"database.server.id\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"1\"</span>,<span class=\"token string\">\"database.server.name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"serverName-test\"</span>,<span class=\"token string\">\"table.include.list\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"debezium_db.users\"</span>,<span class=\"token string\">\"database.history.kafka.bootstrap.servers\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"localhost:9092\"</span>,<span class=\"token string\">\"database.history.kafka.topic\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"schema-changes.users\"</span>,<span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"test-db-connect-test\"</span><span class=\"token punctuation\">}</span>,<span class=\"token string\">\"tasks\"</span>:<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>,<span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"source\"</span><span class=\"token punctuation\">}</span>\n\n정상 생성 되었습니다.  </code></pre></div>\n<p>이제 부터 users 테이블에서 변경이 발견하면 topic에 저장 되게됩니다.<br>\n그렇다면 어떠한 토픽이 생성되었는지 확인해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"> bin/kafka-topics.sh --bootstrap-server localhost:9092  <span class=\"token parameter variable\">--list</span>\n\n__consumer_offsets\nconnect-configs\nconnect-offsets\nconnect-status\nschema-changes.users\nserverName-test\nserverName-test.debezium_db.users\n\n<span class=\"token string\">\"serverName-test.debezium_db.users\"</span> 해당 토픽이 생성된 토픽입니다.   </code></pre></div>\n<p>컨슈밍 하면서 DB 변경을 잘 추적하는지 확인해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 컨슈머를 실행 합니다. </span>\nbin/kafka-console-consumer.sh <span class=\"token parameter variable\">--topic</span> serverName-test.debezium_db.users --from-beginning --bootstrap-server localhost:9092\n\n<span class=\"token comment\"># 업데이트 쿼리를 날려보겠습니다. </span>\nUPDATE debezium_db.users t SET t.age <span class=\"token operator\">=</span> <span class=\"token number\">30</span> WHERE t.id <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token comment\"># 컨슈머로 이벤트 데이터가 들어오는것을 확인할 수 있습니다. </span>\n<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"schema\"</span>:<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"struct\"</span>,<span class=\"token string\">\"fields\"</span>:<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"struct\"</span>,<span class=\"token string\">\"fields\"</span>:<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"int32\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"int32\"</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"serverName_test.debezium_db.users.Value\"</span>,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"before\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"struct\"</span>,<span class=\"token string\">\"fields\"</span>:<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"int32\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"int32\"</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"serverName_test.debezium_db.users.Value\"</span>,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"after\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"struct\"</span>,<span class=\"token string\">\"fields\"</span>:<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"version\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"connector\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"int64\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"ts_ms\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"io.debezium.data.Enum\"</span>,<span class=\"token string\">\"version\"</span>:1,<span class=\"token string\">\"parameters\"</span>:<span class=\"token punctuation\">{</span><span class=\"token string\">\"allowed\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"true,last,false,incremental\"</span><span class=\"token punctuation\">}</span>,<span class=\"token string\">\"default\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"false\"</span>,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"snapshot\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"db\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"sequence\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"table\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"int64\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"server_id\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"gtid\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"int64\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"pos\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"int32\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"row\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"int64\"</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"thread\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"query\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"io.debezium.connector.mysql.Source\"</span>,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"source\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"op\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"int64\"</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"ts_ms\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"struct\"</span>,<span class=\"token string\">\"fields\"</span>:<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"string\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"int64\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"total_order\"</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"int64\"</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"data_collection_order\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>,<span class=\"token string\">\"optional\"</span>:true,<span class=\"token string\">\"field\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"transaction\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>,<span class=\"token string\">\"optional\"</span>:false,<span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"serverName_test.debezium_db.users.Envelope\"</span><span class=\"token punctuation\">}</span>,<span class=\"token string\">\"payload\"</span>:<span class=\"token punctuation\">{</span><span class=\"token string\">\"before\"</span>:<span class=\"token punctuation\">{</span><span class=\"token string\">\"id\"</span>:1,<span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"홍길동\"</span>,<span class=\"token string\">\"age\"</span>:31<span class=\"token punctuation\">}</span>,<span class=\"token string\">\"after\"</span>:<span class=\"token punctuation\">{</span><span class=\"token string\">\"id\"</span>:1,<span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"홍길동\"</span>,<span class=\"token string\">\"age\"</span>:30<span class=\"token punctuation\">}</span>,<span class=\"token string\">\"source\"</span>:<span class=\"token punctuation\">{</span><span class=\"token string\">\"version\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"1.8.0.Final\"</span>,<span class=\"token string\">\"connector\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"mysql\"</span>,<span class=\"token string\">\"name\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"serverName-test\"</span>,<span class=\"token string\">\"ts_ms\"</span>:1641907335000,<span class=\"token string\">\"snapshot\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"false\"</span>,<span class=\"token string\">\"db\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"debezium_db\"</span>,<span class=\"token string\">\"sequence\"</span>:null,<span class=\"token string\">\"table\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"users\"</span>,<span class=\"token string\">\"server_id\"</span>:1,<span class=\"token string\">\"gtid\"</span>:null,<span class=\"token string\">\"file\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"binlog.000002\"</span>,<span class=\"token string\">\"pos\"</span>:3153,<span class=\"token string\">\"row\"</span>:0,<span class=\"token string\">\"thread\"</span>:null,<span class=\"token string\">\"query\"</span>:null<span class=\"token punctuation\">}</span>,<span class=\"token string\">\"op\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"u\"</span>,<span class=\"token string\">\"ts_ms\"</span>:1641907335852,<span class=\"token string\">\"transaction\"</span>:null<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n변경된 데이터는 JSON 데이터에서 \n<span class=\"token variable\"><span class=\"token variable\">`</span>\"payload<span class=\"token string\">\":{\"</span>before<span class=\"token string\">\":{\"</span><span class=\"token function\">id</span><span class=\"token string\">\":1,\"</span>name<span class=\"token string\">\":\"</span>홍길동<span class=\"token string\">\",\"</span>age<span class=\"token string\">\":31},\"</span>after<span class=\"token string\">\":{\"</span><span class=\"token function\">id</span><span class=\"token string\">\":1,\"</span>name<span class=\"token string\">\":\"</span>홍길동<span class=\"token string\">\",\"</span>age\":30<span class=\"token punctuation\">}</span><span class=\"token variable\">`</span></span>\n<span class=\"token string\">\"payload\"</span> key의 값으로 들어옵니다 </code></pre></div>\n<p>만약에 컬럼이 더블 타입일 경우 숫자가 들어올때 이상한 숫자로 들어 올수 있는데요,<br>\n<code class=\"language-text\">\"decimal.handling.mode\": \"double\"</code> 해당 옵션을 커넥트 생성시 넣어주면 더블숫자 그대로 잘 들어 옵니다.</p>\n<p>이외에도 공식문서에 다양한 옵션이 정말 많습니다. <a href=\"https://debezium.io/documentation/reference/1.7/connectors/mysql.html#mysql-property-decimal-handling-mode\">공식 문서 참고</a></p>\n<hr>\n<h1 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h1>\n<p><a href=\"https://debezium.io/documentation/reference/tutorial.html\">디베지움 공식</a><br>\n<a href=\"https://kafka.apache.org/\">카프카 공식</a><br>\n<a href=\"https://www.sosconhistory.net/soscon2019/content/data/session/Day%202_1730_2.pdf\">Debezium 쓸까? 말까?</a><br>\n<a href=\"https://www.qlik.com/us/change-data-capture/cdc-change-data-capture\">cdc-change-data-capture</a></p>","frontmatter":{"date":"January 11, 2022","title":"kafka 와 debezium 살펴보기","categories":"kafka","author":"wooobo","emoji":"🔮"},"fields":{"slug":"/kafka/2022-01-11-kafka-debezium-cdc/"}},"prev":{"id":"bbb26ef3-70fa-558b-9be9-ff2c3c82c765","html":"<h1 id=\"xss\" style=\"position:relative;\"><a href=\"#xss\" aria-label=\"xss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>XSS?</h1>\n<p>XSS(Cross-site Scripting)란 SQL injection과 함께 웹 상에서 가장 기초적인 취약점 공격 방법의 일종으로,\n악의적인 사용자가 공격하려는 사이트에 스크립트를 넣는 기법을 말한다.\n공격에 성공하면 사이트에 접속한 사용자는 삽입된 코드를 실행하게 되며,\n보통 의도치 않은 행동을 수행시키거나 쿠키나 세션 토큰 등의 민감한 정보를 탈취한다.</p>\n<h1 id=\"공격방법\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EA%B2%A9%EB%B0%A9%EB%B2%95\" aria-label=\"공격방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공격방법</h1>\n<ol>\n<li>Stored XSS\n<ul>\n<li>Stored XSS는 사이트 게시판이나 댓글, 닉네임 등 스크립트가 서버에 저장되어 실행되는 방식</li>\n</ul>\n</li>\n<li>Reflected XSS\n<ul>\n<li>Reflected XSS는 보통 URL 파라미터(특히 GET 방식)에 스크립트를 넣어 서버에 저장하지 않고 그 즉시 스크립트를 만드는 방식</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>대부분은 Stored XSS라고 생각하면 된다. Reflected XSS의 경우 브라우저 자체에서 차단하는 경우가 많아 상대적으로 공격을 성공시키기 어렵다.<br>\n-나무위키-</p>\n</blockquote>\n<h1 id=\"대응방법\" style=\"position:relative;\"><a href=\"#%EB%8C%80%EC%9D%91%EB%B0%A9%EB%B2%95\" aria-label=\"대응방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대응방법</h1>\n<ul>\n<li>문자입력을 작성한 그대로 입력하지 않는다\n<ul>\n<li>문자를 필터링</li>\n<li>서버에서 브라우저 전송시 문자 인코딩</li>\n</ul>\n</li>\n</ul>\n<p><code class=\"language-text\">&lt;script></code>의 <code class=\"language-text\">&lt;</code>는 html문자 <code class=\"language-text\">&amp;lt;</code>로, <code class=\"language-text\">></code> 는 <code class=\"language-text\">&amp;gt;</code>로 변경한다.<br>\n이러한 <code class=\"language-text\">XSS</code>필터링해주는 라이브러리를 활용하는것도 좋을것같다 (<a href=\"https://github.com/naver/lucy-xss-filter\">lucy-xss-filter 링크</a>)</p>\n<h2 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h2>\n<ul>\n<li><a href=\"https://tecoble.techcourse.co.kr/post/2021-04-26-cross-site-scripting/\">https://tecoble.techcourse.co.kr/post/2021-04-26-cross-site-scripting/</a></li>\n<li><a href=\"http://blog.plura.io/?p=7614\">http://blog.plura.io/?p=7614</a></li>\n<li><a href=\"https://namu.wiki/w/XSS\">https://namu.wiki/w/XSS</a></li>\n</ul>","frontmatter":{"date":"January 17, 2022","title":"XSS(Cross-site Scripting)","categories":"프로그래밍","author":"wooobo","emoji":"🔮"},"fields":{"slug":"/security/2022-01-29-xss/"}},"site":{"siteMetadata":{"siteUrl":"https://wooobo.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/tdd/2022-01-12-unit-testing-01/","nextSlug":"/kafka/2022-01-11-kafka-debezium-cdc/","prevSlug":"/security/2022-01-29-xss/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}